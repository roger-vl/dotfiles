# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
after-login-command = []
# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
after-startup-command = [
  'exec-and-forget borders active_color=0xff6c674f inactive_color=0x00000000 width=7.0',
  ##
  #'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]
# Start AeroSpace at login
start-at-login = false

# Notify Sketchybar about workspace change
# exec-on-workspace-change = [
#   '/bin/bash',
#   '-c',
#   # 'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
# ]
# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 100
# Possible values: tiles|accordion
default-root-container-layout = 'tiles'
# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'
# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  # 'exec-and-forget [ $(aerospace list-windows --workspace focused | wc -l) -eq 1 ] && borders width=0.0 || borders width=6.0',
  'move-mouse window-lazy-center', # Mouse lazily follows any focus (window or workspace)
]
# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 15
inner.vertical = 15
outer.left = [{ monitor.main = 20 }, { monitor."secondary" = 0 }, 20]
outer.bottom = [{ monitor.main = 10 }, { monitor."secondary" = 0 }, 10]
outer.top = [{ monitor.main = 5 }, { monitor."secondary" = 0 }, 5]
outer.right = [{ monitor.main = 20 }, { monitor."secondary" = 0 }, 20]

[workspace-to-monitor-force-assignment]
1 = 'main'                # Monitor sequence number from left to right. 1-based indexing
2 = 'main'                # Main monitor
3 = ['secondary', 'main'] # Non-main monitor in

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
# cmd-h = []     # Disable "hide application"
# cmd-alt-h = [] # Disable "hide others"

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-comma = 'layout h_accordion h_tiles'
# alt-2 = 'layout tiling floating'
# alt-3 = 'fullscreen'
# alt-4 = '''exec-and-forget
#     aerospace layout floating \
#       && ~/.config/aerospace/float_center.sh \
#       || aerospace layout tiling
#     '''

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-ctrl-h = 'move left'
alt-ctrl-j = 'move down'
alt-ctrl-k = 'move up'
alt-ctrl-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-h = 'resize smart +50'
alt-shift-l = 'resize smart -50'
alt-shift-j = 'resize smart-opposite +50'
alt-shift-k = 'resize smart-opposite -50'


# layout union
alt-cmd-h = 'join-with left'
alt-cmd-j = 'join-with down'
alt-cmd-k = 'join-with up'
alt-cmd-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-u = 'workspace 1'
alt-i = 'workspace 2'
alt-o = 'workspace 3'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-u = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-i = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-o = 'move-node-to-workspace 3 --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']


[[on-window-detected]]
if.app-name-regex-substring = 'Spotify'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'slack'
run = ['move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'run'
run = ['move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'music'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'reminders'
run = ['move-node-to-workspace 3']
